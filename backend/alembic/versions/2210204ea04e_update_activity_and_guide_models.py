"""update activity and guide models

Revision ID: 2210204ea04e
Revises: 1401710036f1
Create Date: 2025-02-09 00:36:02.160470

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2210204ea04e'
down_revision: Union[str, None] = '1401710036f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_participants_id'), 'activity_participants', ['id'], unique=False)
    op.drop_index('ix_activity_registrations_id', table_name='activity_registrations')
    op.drop_table('activity_registrations')
    op.add_column('activities', sa.Column('is_online', sa.Boolean(), nullable=True))
    op.add_column('activities', sa.Column('category', sa.String(), nullable=True))
    op.add_column('activities', sa.Column('creator_id', sa.Integer(), nullable=True))
    op.alter_column('activities', 'status',
               existing_type=postgresql.ENUM('DRAFT', 'PUBLISHED', 'CANCELLED', 'COMPLETED', name='activitystatus'),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint('activities_organizer_id_fkey', 'activities', type_='foreignkey')
    op.create_foreign_key(None, 'activities', 'users', ['creator_id'], ['id'])
    op.drop_column('activities', 'type')
    op.drop_column('activities', 'organizer_id')
    op.add_column('guide_steps', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('guide_steps', sa.Column('order', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_guide_steps_title'), 'guide_steps', ['title'], unique=False)
    op.drop_column('guide_steps', 'content')
    op.drop_column('guide_steps', 'image_url')
    op.drop_column('guide_steps', 'step_order')
    op.add_column('guides', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('guides', sa.Column('difficulty', sa.String(), nullable=True))
    op.add_column('guides', sa.Column('is_published', sa.Boolean(), nullable=True))
    op.add_column('guides', sa.Column('creator_id', sa.Integer(), nullable=True))
    op.alter_column('guides', 'category',
               existing_type=postgresql.ENUM('TRANSPORTATION', 'PAYMENT', 'HEALTHCARE', 'ENTERTAINMENT', 'TECHNOLOGY', 'DAILY_LIFE', 'OTHER', name='guidecategory'),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_guides_category'), 'guides', ['category'], unique=False)
    op.create_foreign_key(None, 'guides', 'users', ['creator_id'], ['id'])
    op.drop_column('guides', 'content')
    op.drop_column('guides', 'difficulty_level')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('guides', sa.Column('difficulty_level', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('guides', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'guides', type_='foreignkey')
    op.drop_index(op.f('ix_guides_category'), table_name='guides')
    op.alter_column('guides', 'category',
               existing_type=sa.String(),
               type_=postgresql.ENUM('TRANSPORTATION', 'PAYMENT', 'HEALTHCARE', 'ENTERTAINMENT', 'TECHNOLOGY', 'DAILY_LIFE', 'OTHER', name='guidecategory'),
               existing_nullable=True)
    op.drop_column('guides', 'creator_id')
    op.drop_column('guides', 'is_published')
    op.drop_column('guides', 'difficulty')
    op.drop_column('guides', 'description')
    op.add_column('guide_steps', sa.Column('step_order', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('guide_steps', sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('guide_steps', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_guide_steps_title'), table_name='guide_steps')
    op.drop_column('guide_steps', 'order')
    op.drop_column('guide_steps', 'description')
    op.add_column('activities', sa.Column('organizer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('activities', sa.Column('type', postgresql.ENUM('EXERCISE', 'ENTERTAINMENT', 'EDUCATION', 'TRAVEL', 'SOCIAL', 'OTHER', name='activitytype'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'activities', type_='foreignkey')
    op.create_foreign_key('activities_organizer_id_fkey', 'activities', 'users', ['organizer_id'], ['id'])
    op.alter_column('activities', 'status',
               existing_type=sa.String(),
               type_=postgresql.ENUM('DRAFT', 'PUBLISHED', 'CANCELLED', 'COMPLETED', name='activitystatus'),
               existing_nullable=True)
    op.drop_column('activities', 'creator_id')
    op.drop_column('activities', 'category')
    op.drop_column('activities', 'is_online')
    op.create_table('activity_registrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('registration_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activity_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], name='activity_registrations_activity_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='activity_registrations_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activity_registrations_pkey')
    )
    op.create_index('ix_activity_registrations_id', 'activity_registrations', ['id'], unique=False)
    op.drop_index(op.f('ix_activity_participants_id'), table_name='activity_participants')
    op.drop_table('activity_participants')
    # ### end Alembic commands ###
